{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ericamelodecarvalho/Projects/fso/part2/countries/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst Search = ({\n  search,\n  setSearch\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"countrySearch\",\n      children: \"Find countries: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"countrySearch\",\n      id: \"countrySearch\",\n      value: search,\n      onChange: e => setSearch(e.target.value.toLowerCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Search;\n\nconst Country = ({\n  country,\n  show\n}) => {\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country.capital\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"population \", country.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: country.languages.map(lang => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: lang.name\n        }, lang.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: country.flag,\n        alt: \"\",\n        style: {\n          width: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [country.name, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => console.log('click'),\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = Country;\n\nconst Countries = ({\n  countries\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  if (countries.length === 1) {\n    return /*#__PURE__*/_jsxDEV(Country, {\n      country: countries[0],\n      show: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: countries.map(country => /*#__PURE__*/_jsxDEV(Country, {\n        country: country,\n        show: show,\n        children: [country.name, ' ']\n      }, country.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Countries, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c3 = Countries;\n\nfunction App() {\n  _s2();\n\n  const [search, setSearch] = useState('');\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(res => setCountries(res.data));\n  }, []);\n  const filteredCountries = countries.filter(country => country.name.toLowerCase().includes(search));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), filteredCountries.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many searches, specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Countries, {\n      countries: filteredCountries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(App, \"syJMAwYffxq4gnJoXDei1FO9zGo=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"Country\");\n$RefreshReg$(_c3, \"Countries\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/ericamelodecarvalho/Projects/fso/part2/countries/src/App.js"],"names":["React","useState","useEffect","axios","Search","search","setSearch","e","target","value","toLowerCase","Country","country","show","name","capital","population","languages","map","lang","flag","width","console","log","Countries","countries","setShow","length","App","setCountries","get","then","res","data","filteredCountries","filter","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst Search = ({ search, setSearch }) => {\n  return (\n    <>\n      <label htmlFor='countrySearch'>Find countries: </label>\n      <input\n        type='text'\n        name='countrySearch'\n        id='countrySearch'\n        value={search}\n        onChange={(e) => setSearch(e.target.value.toLowerCase())}\n      />\n    </>\n  );\n};\n\nconst Country = ({ country, show }) => {\n  if (show) {\n    return (\n      <li>\n        <h1>{country.name}</h1>\n        <p>{country.capital}</p>\n        <p>population {country.population}</p>\n        <h2>languages</h2>\n        <ul>\n          {country.languages.map((lang) => (\n            <li key={lang.name}>{lang.name}</li>\n          ))}\n        </ul>\n        <img src={country.flag} alt='' style={{ width: '200px' }} />\n      </li>\n    );\n  } else {\n    return (\n      <li>\n        {country.name}{' '}\n        <button onClick={() => console.log('click')}>show</button>\n      </li>\n    );\n  }\n};\n\nconst Countries = ({ countries }) => {\n  const [show, setShow] = useState(false);\n\n  if (countries.length === 1) {\n    return <Country country={countries[0]} show={true} />;\n  } else {\n    return (\n      <ul>\n        {countries.map((country) => (\n          <Country key={country.name} country={country} show={show}>\n            {country.name}{' '}\n          </Country>\n        ))}\n      </ul>\n    );\n  }\n};\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then((res) => setCountries(res.data));\n  }, []);\n\n  const filteredCountries = countries.filter((country) =>\n    country.name.toLowerCase().includes(search)\n  );\n\n  return (\n    <>\n      <Search search={search} setSearch={setSearch} />\n      {filteredCountries.length > 10 ? (\n        <p>Too many searches, specify another filter</p>\n      ) : (\n        <Countries countries={filteredCountries} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}